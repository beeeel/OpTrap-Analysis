GUIDE FOR IMAGE QUANTIFICATION.M

Project name: Image Processing for Tracking an Optically Trapped Cell
Programmer  : Felix A.Halim

PROJECT ABSTRACT:

Surface topography affects cell behaviour. Thus, quantifying the motion 
and its deformation might provide better understanding of their behaviour.
This project attempts to quantify those factors on optically trapped cell.
The code involves edge detection to track the deformation and pattern 
matching approach to quantify the motion in translation and rotation. 
It produces video with cell tracking and set of graphs of surface drift, 
cell dimensions, it’s ratio, displacement in both axis and the rotation of 
the cell. The provided samples show that immune cells, primary monocytes, 
probably like the teeth surface because it struggles on the first couple 
minutes but become stable after approximately 20 minutes. On contrary, on 
both flat and rounded surface, it constantly moves or deforms with less 
indication of being stable.


PROGRAM DETAIL:

The following code calculates surface drift, cell deformation and motion
The main process:
1st loop
Binary converstion is utilised for tracking surface drift
-use cropped image as input
-use default Otsu's method for binary conversion
-take the biggest area as surface
-identify surface orientaion and location based on centroid
-'offset' value will increase the surface thickness 
-2 method for surface mask (for surface elimination)

Edge detection is utilised to indicate deformation
-use smoothed image of cropped image as input
-use 'canny' edge detection
-detect the outer most lines to indicate the dimensions
-take the outer most line from all frames (4 sides) for new region

2nd loop
The pattern matching is utilised to quantify motion
-use the new region as input (fixed frame)
-use the adjacent frame to compare 
-use 'imregtform' with 'rigid' transformation type


WARNING:

-Require 'Image Processing toolbox' of MATLAB to run
-Line 192 and 193 require 'computer vision toolbox' of MATLAB
if not available, it can be disable without disturbing the quantification
but loss the features in video result (frame number and cell box)


MANUAL:

STEP 1: compulsory input (if the environment still the same)  
	- Line 19: file name
	- Line 21: type of the surface mask method (refer to the paper for detail)

STEP 2: - put the 'current folder' window on the folder where the video saved
	- when run the first time a pop up will shown 
	- choose 'Add to Path' 
	
STEP 3: - an image (first frame of the video) will pop out 
	- choose the ROI by click on one edge and drag to create rectangle frame
	- the frame should include both surface across the edges of the screen and capture all cell motion
	- the selection only exectued once, if wrong section selected, recommended to abord the prcoess (CTRL+C)
	- the program will decline the selection if the frame is too small or there is not object detected (so, rerun again)
 
STEP 4: - couple warning might pop-up (ignored)
	- wait until the graphs comeout while watching the video 


EXTRA INFORMATION:

General enviroment input:
frame:300 	(300 frames)
px_to_mc=10 	(10 pixel is 1 micron)
offset=0	(no surface offset/boost(refer to the paper for explanation))
type=1		(1st method surface mask, choose 2 only if it teeth surface)

Advance input:
sigma:0.2	(adjust the toning in smoothing process [0 to 1])
alpha:5		(adjust the smoothing level)
optimizer, metric= imregconfig ('monomodal') 	(other type of optimizer can be used)

Major variable names identification:
BBoxB	 : Bottom bounding box
BBoxL	 : Left bounding box
BBoxR	 : Right bounding box
BBoxT	 : Top bounding box
H	 : new cell region height
hv	 : surface orientation (3:vertical;4:horizontal)
I_F	 : Choosen surface mask
I_FO1	 : 1st method surface mask
I_FO2	 : 2nd method surface mask
I_O	 : Binary Image
I_O1	 : fixed frame for pattern mathing (processed)
I_O2	 : moving frame for pattern mathing (processed)
I_Ofix	 : fixed frame for pattern mathing (final)
I_Omov	 : moving frame for pattern mathing (final)
I_Ori	 : Original image which crafted before saving the video frame
I_S	 : Smoothed Image
parameter: Threshold for filtering on binary image
ROI	 : Region of interest coordinate from manual cropping
ROI_T	 : new cell region coordinate
simb	 : 'b' value (rotation angle 1) from pattern matching
simc	 : 'c' value (rotation angle 2) from pattern matching
simx(yxs): x translation from pattern matching 
simy(yys): y translation from pattern matching 
Size	 : Size (width and lenght) of the ROI 
Surf_H	 : Surface Thickness
W	 : new cell region width
yBBW	 : cell width each frames (parallel to surface) (in micron)
yBBT	 : cell height/thickness each frames (perpendicular to surface) (in micron)
yR	 : cell ratio (height/width)
yrb	 : rotation angle from pattern matching (in degree)
ySH	 : surface thickness (in micron) 

For 3D surface program:
The same 